
task generateTerraformVariables(group: 'Infrastructure preparation') {
  doLast {
    file('terraform/input.auto.tfvars').text = """
student_count = ${studentCount}
"""
  }
}

task terraformInit(type: Exec, group: 'Infrastructure preparation') {
  commandLine 'terraform', 'init'
  workingDir 'terraform'
}

task terraformApply(type: Exec, group: 'Infrastructure preparation', dependsOn: [ generateTerraformVariables, terraformInit ]) {
  commandLine 'terraform', 'apply', '-auto-approve'
  workingDir 'terraform'
}

task terraformPlan(type: Exec, group: 'Infrastructure preparation', dependsOn: [ generateTerraformVariables ]) {
  commandLine 'terraform', 'plan'
  workingDir 'terraform'
}

task terraformDestroy(type: Exec, group: 'Infrastructure shutdown') {
  commandLine 'terraform', 'destroy', '-force'
  workingDir 'terraform'
}

task listIps(group: 'Infrastructure support', dependsOn: [ generateTerraformVariables ]) {
  doLast {

    println "\nLinux Machines:"
    println "name,ip"
    project.getTerraformState().modules[0].resources.findAll { it.key.startsWith 'aws_instance.test_machine_linux.' }.sort { it.value.primary.attributes.'tags.Name' }.each { println "${it.value.primary.attributes.'tags.Name'},${it.value.primary.attributes.public_ip}" }

    println "\nWindows Machines:"
    println "name,ip"
    project.getTerraformState().modules[0].resources.findAll { it.key.startsWith 'aws_instance.test_machine_windows.' }.each { println "${it.value.primary.attributes.'tags.Name'},${it.value.primary.attributes.public_ip}" }

    println "\nDevOps Server:"
    project.getTerraformState().modules[0].resources.findAll { it.key.startsWith 'aws_instance.devops_server' }.each { println it.value.primary.attributes.public_ip }

  }
}

task listKeys(group: 'Infrastructure support') {
  doLast {
    println "\nStudent Access Keys:"
    println "username,accessKeyId,secretAccessKey"
    project.getTerraformState().modules[0].resources.findAll { it.key.startsWith 'aws_iam_access_key.' }.sort { it.value.primary.attributes.user }.each { println "${it.value.primary.attributes.user},${it.value.primary.id},${it.value.primary.attributes.secret}" }
  }
}

task listNetwork(group: 'Infrastructure support') {
  doLast {
    println "AMI ID: ${project.getTerraformState().modules[0].resources.'data.aws_ami.devops_ubuntu_xenial'.primary.id}"
    println "Subnet ID: ${project.getTerraformState().modules[0].resources.'aws_subnet.devops_subnet'.primary.id}"
    println "Security Group ID: ${project.getTerraformState().modules[0].resources.'aws_security_group.devops_security'.primary.id}"
  }
}

