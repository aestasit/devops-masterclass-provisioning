
import groovy.json.JsonSlurper

buildscript {
  repositories { 
    mavenCentral() 
    jcenter() 
    maven { url "http://repo.jenkins-ci.org/releases"}
  }
  dependencies { 
    classpath 'com.aestasit.infrastructure.sshoogr:sshoogr:0.9.18'
    classpath 'com.aestasit.infrastructure.sshoogr:sshoogr-gradle:0.9.18'
    classpath "org.eclipse.jgit:org.eclipse.jgit:4.5.0.201609210915-r"
  }
}

plugins {
  id "idea"
  // id "com.terrafolio.jenkins" version "1.3.4"
  id "com.sbelei.jenkins" version "1.4.9"
}

apply plugin: 'base'
apply plugin: 'secureShell'

ext {

  stateFile = new File('terraform/terraform.tfstate')

  getTerraformState = {
    stateFile.exists() ? new JsonSlurper().parse(stateFile) : [:]
  }

  getServerIp = { 
    project.
      getTerraformState()?.
      outputs?.
      eip?.
      value ?: '127.0.0.1'
  }

  getServerInstanceId = {
    project.
      getTerraformState()?.
      resources?.
      findAll { it.name.startsWith 'devops_server' }?.
      collect { it.instances?.find()?.attributes?.id }?.
      find() ?: 'i-unknown'
  }

}

sshOptions {
  defaultHost       = project.getServerIp()
  defaultPort       = Integer.valueOf(serverPort)
  defaultUser       = serverUser
  defaultPassword   = ''
  defaultKeyFile    = file(serverKey)
  reuseConnection   = true
  trustUnknownHosts = true
  verbose           = true
  execOptions {
    showCommand     = true
    showOutput      = true
  }
}

mkdir buildDir

apply from: 'gradle/download.gradle'
apply from: 'gradle/terraform.gradle'
apply from: 'gradle/dns.gradle'
apply from: 'gradle/puppet.gradle'
apply from: 'gradle/ansible.gradle'
apply from: 'gradle/gitlab.gradle'
apply from: 'gradle/jenkins.gradle'

apply from: 'gradle/setupOperations.gradle'
apply from: 'gradle/supportOperations.gradle'
apply from: 'gradle/teardownOperations.gradle'
